<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Asswei&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://asswei7.github.io/"/>
  <updated>2021-09-17T02:53:40.744Z</updated>
  <id>https://asswei7.github.io/</id>
  
  <author>
    <name>孙书玮</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图谱实践</title>
    <link href="https://asswei7.github.io/2021/09/17/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/"/>
    <id>https://asswei7.github.io/2021/09/17/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/</id>
    <published>2021-09-17T02:07:52.000Z</published>
    <updated>2021-09-17T02:53:40.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RDF、RDFS、OWL"><a href="#RDF、RDFS、OWL" class="headerlink" title="RDF、RDFS、OWL"></a>RDF、RDFS、OWL</h1><h3 id="RDF"><a href="#RDF" class="headerlink" title="RDF"></a>RDF</h3><p>Example3 Turtle:</p><p>@prefix person: <a href="http://www.kg.com/person/">http://www.kg.com/person/</a> .<br>@prefix place: <a href="http://www.kg.com/place/">http://www.kg.com/place/</a> .<br>@prefix : <a href="http://www.kg.com/ontology/">http://www.kg.com/ontology/</a> .</p><p>person:1 :chineseName “罗纳尔多·路易斯·纳萨里奥·德·利马”^^string;<br>         :career “足球运动员”^^string;<br>         :fullName “Ronaldo Luís Nazário de Lima”^^string;<br>         :birthDate “1976-09-18”^^date;<br>         :height “180”^^int;<br>         :weight “98”^^int;<br>         :nationality “巴西”^^string;<br>         :hasBirthPlace place:10086.<br>place:10086 :address “里约热内卢”^^string;<br>            :coordinate “-22.908333, -43.196389”^^string.</p><p>即，将一个实体用一个句子表示（这里的句子指的是一个英文句号“.”）而不是多个句子，属性间用分号隔开。</p><p>RDF的表达能力有限，无法区分类和对象，也无法定义和描述类的关系/属性。我的理解是，RDF是对具体事物的描述，缺乏抽象能力，无法对同一个类别的事物进行定义和描述。就以罗纳尔多这个知识图为例，RDF能够表达罗纳尔多和里约热内卢这两个实体具有哪些属性，以及它们之间的关系。但如果我们想定义罗纳尔多是人，里约热内卢是地点，并且人具有哪些属性，地点具有哪些属性，人和地点之间存在哪些关系，这个时候RDF就表示无能为力了。</p><p>RDFS和OWL这两种技术或者说模式语言/本体语言（schema/ontology language）解决了RDF表达能力有限的困境。</p><h3 id="RDFS"><a href="#RDFS" class="headerlink" title="RDFS"></a>RDFS</h3><p>RDFS/OWL本质上是一些预定义词汇（vocabulary）构成的集合，用于对RDF进行类似的类定义及其属性的定义。</p><p>我们这里只介绍RDFS几个比较重要，常用的词汇：</p><ol><li>rdfs:Class. 用于定义类。</li><li>rdfs:domain. 用于表示该属性属于哪个类别。</li><li>rdfs:range. 用于描述该属性的取值类型。</li><li>rdfs:subClassOf. 用于描述该类的父类。比如，我们可以定义一个运动员类，声明该类是人的子类。</li><li>rdfs:subProperty. 用于描述该属性的父属性。比如，我们可以定义一个名称属性，声明中文名称和全名是名称的子类。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@prefix rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt; .</span><br><span class="line">@prefix rdf: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&gt; .</span><br><span class="line">@prefix : &lt;http:&#x2F;&#x2F;www.kg.com&#x2F;ontology&#x2F;&gt; .</span><br><span class="line"></span><br><span class="line">这里我们用词汇rdfs:Class定义了“人”和“地点”这两个类。</span><br><span class="line">:Person rdf:type rdfs:Class.</span><br><span class="line">:Place rdf:type rdfs:Class.</span><br><span class="line">rdfs当中不区分数据属性和对象属性，词汇rdf:Property定义了属性，即RDF的“边”。</span><br><span class="line">:chineseName rdf:type rdf:Property;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br><span class="line"></span><br><span class="line">:career rdf:type rdf:Property;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br><span class="line">        </span><br><span class="line">:fullName rdf:type rdf:Property;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br></pre></td></tr></table></figure><h3 id="OWL"><a href="#OWL" class="headerlink" title="OWL"></a>OWL</h3><p>上面我们提到，RDFS本质上是RDF词汇的一个扩展。后来人们发现RDFS的表达能力还是相当有限，因此提出了OWL。我们也可以把OWL当做是RDFS的一个扩展，其添加了额外的预定义词汇。OWL，即“Web Ontology Language”，语义网技术栈的核心之一。OWL有两个主要的功能：1. 提供快速、灵活的数据建模能力。2. 高效的自动推理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">@prefix rdfs: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;01&#x2F;rdf-schema#&gt; .</span><br><span class="line">@prefix rdf: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&gt; .</span><br><span class="line">@prefix : &lt;http:&#x2F;&#x2F;www.kg.com&#x2F;ontology&#x2F;&gt; .</span><br><span class="line">@prefix owl: &lt;http:&#x2F;&#x2F;www.w3.org&#x2F;2002&#x2F;07&#x2F;owl#&gt; .</span><br><span class="line"></span><br><span class="line">这里我们用词汇owl:Class定义了“人”和“地点”这两个类。</span><br><span class="line">:Person rdf:type owl:Class.</span><br><span class="line">:Place rdf:type owl:Class.</span><br><span class="line"></span><br><span class="line">owl区分数据属性和对象属性（对象属性表示实体和实体之间的关系）。词汇owl:DatatypeProperty定义了数据属性，owl:ObjectProperty定义了对象属性。</span><br><span class="line">:chineseName rdf:type owl:DatatypeProperty;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br><span class="line"></span><br><span class="line">:career rdf:type owl:DatatypeProperty;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br><span class="line">        </span><br><span class="line">:fullName rdf:type owl:DatatypeProperty;</span><br><span class="line">        rdfs:domain :Person;</span><br><span class="line">        rdfs:range xsd:string .</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>描述属性特征的词汇</p><ol><li>owl:TransitiveProperty. 表示该属性具有传递性质。例如，我们定义“位于”是具有传递性的属性，若A位于B，B位于C，那么A肯定位于C。</li><li>owl:SymmetricProperty. 表示该属性具有对称性。例如，我们定义“认识”是具有对称性的属性，若A认识B，那么B肯定认识A。</li><li>owl:FunctionalProperty表示该属性取值的唯一性。例如，我们定义“母亲”是具有唯一性的属性，若A的母亲是B，在其他地方我们得知A的母亲是C，那么B和C指的是同一个人。</li><li>owl:inverseOf. 定义某个属性的相反关系。例如，定义“父母”的相反关系是“子女”，若A是B的父母，那么B肯定是A的子女。</li></ol><p>本体映射词汇（Ontology Mapping）</p><ol><li>owl:equivalentClass. 表示某个类和另一个类是相同的。</li><li>owl:equivalentProperty. 表示某个属性和另一个属性是相同的。</li><li>owl:sameAs. 表示两个实体是同一个实体。</li></ol><p>本体映射主要用在融合多个独立的Ontology（Schema）。举个例子，张三自己构建了一个本体结构，其中定义了Person这样一个类来表示人；李四则在自己构建的本体中定义Human这个类来表示人。当我们融合这两个本体的时候，就可以用到OWL的本体映射词汇。</p><p><strong>推理方面的能力</strong>：基于本体的推理和基于规则的推理<br>如果我们用inversOf来表示hasParent和hasChild互为逆关系，上面的数据可以表示为：<br><img src="/2021/09/17/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/%E5%9B%BE%E8%B0%B1%E5%AE%9E%E8%B7%B5/reverse.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RDF、RDFS、OWL&quot;&gt;&lt;a href=&quot;#RDF、RDFS、OWL&quot; class=&quot;headerlink&quot; title=&quot;RDF、RDFS、OWL&quot;&gt;&lt;/a&gt;RDF、RDFS、OWL&lt;/h1&gt;&lt;h3 id=&quot;RDF&quot;&gt;&lt;a href=&quot;#RDF&quot; class
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>面试题</title>
    <link href="https://asswei7.github.io/2021/09/16/%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://asswei7.github.io/2021/09/16/%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2021-09-16T01:53:16.000Z</published>
    <updated>2021-09-16T02:05:21.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h2><p>指事务的参与者、支持事务的服务器、资源服务器、事务管理器分别位于不同的分布式系统的不同节点之上。简单说，就是分布式系统中的事务，它的存在是为了保证不同的数据库节点的数据一致性。</p><h3 id="CAP理论"><a href="#CAP理论" class="headerlink" title="CAP理论"></a>CAP理论</h3><ul><li>Consistency:数据在多个副本之间保持一致性。例如一个数据在某个分区节点更新后，在其他分区节点读出来的数据也是更新之后的数据。</li><li>Availability:系统提供的服务必须一直处于可用的状态。对于用户的操作请求总是能在有限的时间内返回结果。</li><li>Partition tolerance分布式系统在遇到任何网络分区故障时，仍然能保证对外提供满足一致性和可用性的服务。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分布式事务&quot;&gt;&lt;a href=&quot;#分布式事务&quot; class=&quot;headerlink&quot; title=&quot;分布式事务&quot;&gt;&lt;/a&gt;分布式事务&lt;/h2&gt;&lt;p&gt;指事务的参与者、支持事务的服务器、资源服务器、事务管理器分别位于不同的分布式系统的不同节点之上。简单说，就是分布式系
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>idea快捷键</title>
    <link href="https://asswei7.github.io/2021/09/16/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://asswei7.github.io/2021/09/16/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2021-09-16T01:34:02.000Z</published>
    <updated>2021-09-16T01:34:02.776Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="https://asswei7.github.io/2021/09/16/vue%E5%AD%A6%E4%B9%A0/"/>
    <id>https://asswei7.github.io/2021/09/16/vue%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-09-16T01:32:05.000Z</published>
    <updated>2021-09-16T01:33:18.823Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="https://asswei7.github.io/2021/09/16/vue%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/"/>
    <id>https://asswei7.github.io/2021/09/16/vue%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-09-16T01:32:05.000Z</published>
    <updated>2021-09-16T01:32:05.261Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://asswei7.github.io/2021/09/16/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84/%E9%87%8D%E6%9E%84%E6%8A%80%E5%B7%A7/"/>
    <id>https://asswei7.github.io/2021/09/16/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84/%E9%87%8D%E6%9E%84%E6%8A%80%E5%B7%A7/</id>
    <published>2021-09-16T01:11:27.398Z</published>
    <updated>2021-09-16T01:11:27.398Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://asswei7.github.io/2021/07/16/%E4%B8%80%E6%9D%A1%E6%9C%A8%E5%92%B8%E9%B1%BC/%E7%BA%AA%E6%99%93%E5%B2%9A/"/>
    <id>https://asswei7.github.io/2021/07/16/%E4%B8%80%E6%9D%A1%E6%9C%A8%E5%92%B8%E9%B1%BC/%E7%BA%AA%E6%99%93%E5%B2%9A/</id>
    <published>2021-07-16T07:45:40.456Z</published>
    <updated>2021-07-21T07:05:30.257Z</updated>
    
    <content type="html"><![CDATA[<p>“F:\Nodejs\node_global\node_modules\hexo\README.md”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;“F:\Nodejs\node_global\node_modules\hexo\README.md”&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>拿破仑</title>
    <link href="https://asswei7.github.io/2021/02/27/%E6%8B%BF%E7%A0%B4%E4%BB%91/%E6%8B%BF%E7%A0%B4%E4%BB%91/"/>
    <id>https://asswei7.github.io/2021/02/27/%E6%8B%BF%E7%A0%B4%E4%BB%91/%E6%8B%BF%E7%A0%B4%E4%BB%91/</id>
    <published>2021-02-27T07:25:35.000Z</published>
    <updated>2021-03-25T12:12:36.596Z</updated>
    
    <content type="html"><![CDATA[<ol><li>出生<br>少时性格孤僻，一个人在家中看书。如果有人欺负他，一定会大打出手。父亲有贵族身份，进入好的学校学习。1789年法国大革命，将皇帝路易十六杀头，欧洲几个国家的皇帝联合反法，拿破仑从军，由于法国军队节节败退，法国出现内乱，土伦是法国南部的重要港口，一旦失守，英国可以从此登陆法国，拿破仑当上了炮兵的指挥官，收复了土伦港口。</li></ol><p>拿破仑打败了意大利、奥地利，击败了第一次反法同盟，保卫了法国的革命果实。</p><ol><li>称帝<br>由于法国是共和国，到处帮助别的国家革命，宣传自己的先进制度。拿破仑组建一个强大的舰队，英国试图阻止，但被狂风卷走搁浅。拿破仑去远征埃及，纳尔逊封锁港口，拿破仑写给老婆的信被英军截获，得知其老婆出轨。1799年拿破仑放弃埃及军队，一个人偷偷返回巴黎，发动雾月政变，法国从共和国变成了帝国，本来该由教皇戴皇冠，但是拿破仑厌恶教皇。<br>1805年，拿破仑把自己加冕为意大利国王，侵犯了奥地利的利益，奥地利联合俄国反法，奥斯特里茨之战，拿破仑派人求和，让沙皇膨胀最终获胜。</li></ol><ol><li>远征俄罗斯<br>1807年，西班牙内乱，影响法国的利益，拿破仑拥立自己哥哥当西班牙国王，西班牙反对，英国联合西班牙反法，奥地利从东线攻打法国，拿破仑从西边撤退打败奥地利，签订《维也纳合约》，法国第一帝国达到了鼎盛。</li></ol><p>1812年拿破仑远征俄罗斯，到处都是荒芜，得不到补给，9月拿破仑到达莫斯科郊外，<br>遭遇顽强抵抗，攻入莫斯科，城市已经被火烧。</p><p>俄国在拿破仑返回途中埋伏，并且被寒冬击败。此时，奥地利和普鲁士对拿破仑出兵，击败三国联军，英国人在西线攻打法国。<br>1814年各国联军进入巴黎，拿破仑被迫退位，流放厄尔巴岛，拿破仑之后逃跑，登录法国，法国皇帝派军攻打拿破仑，却倒戈，拿破仑再次称帝。</p><p>再次反法同盟会战，滑铁卢会战。拿破仑流放到圣赫那拉岛，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;出生&lt;br&gt;少时性格孤僻，一个人在家中看书。如果有人欺负他，一定会大打出手。父亲有贵族身份，进入好的学校学习。1789年法国大革命，将皇帝路易十六杀头，欧洲几个国家的皇帝联合反法，拿破仑从军，由于法国军队节节败退，法国出现内乱，土伦是法国南部的重要港口，一旦失守
      
    
    </summary>
    
    
    
      <category term="历史" scheme="https://asswei7.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>极简英语史</title>
    <link href="https://asswei7.github.io/2021/01/29/%E6%9E%81%E7%AE%80%E8%8B%B1%E8%AF%AD%E5%8F%B2/%E6%9E%81%E7%AE%80%E8%8B%B1%E8%AF%AD%E5%8F%B2/"/>
    <id>https://asswei7.github.io/2021/01/29/%E6%9E%81%E7%AE%80%E8%8B%B1%E8%AF%AD%E5%8F%B2/%E6%9E%81%E7%AE%80%E8%8B%B1%E8%AF%AD%E5%8F%B2/</id>
    <published>2021-01-29T13:56:41.000Z</published>
    <updated>2021-02-27T07:26:21.313Z</updated>
    
    <content type="html"><![CDATA[<p>汉朝时匈奴西迁，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;汉朝时匈奴西迁，&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="https://asswei7.github.io/2021/01/29/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://asswei7.github.io/2021/01/29/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-01-29T01:25:11.000Z</published>
    <updated>2021-01-29T14:06:02.305Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><p><strong>定义：</strong><br>确保一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。</p><p><strong>类的实例成员和静态成员：</strong><br>类的静态成员每个类只有一个，非静态成员每个对象一个。</p><p>静态成员属于这个类，非静态成员属于这个类的实例对象。</p><p><strong>分析：</strong><br>由于只有一个实例，其构造方法一定不能为public，即不能被外界进行实例化。</p><p>并且该实例是这个类的静态成员变量，属于这个类。并且要提供一个静态方法，向外界提供这个实例。</p><p><strong>应用：</strong><br>确保一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。</p><p>比如：序列号生成器，Web页面计数器。或者创建一个对象需要消耗很多的资源，比如访问IO，数据库资源，也可以使用。</p><p>饿汉式：在类加载时就进行类的实例化。<br>懒汉式：在类的第一次使用（调用其静态方法）时进行实例化。</p><h3 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h3><p><strong>定义：</strong><br>属于类创建型模式。根据参数的不同返回不同类的实例。专门定义一个类负责创建其他类的实例，被创建的实例通常具有共同的父类。</p><p><strong>分析：</strong><br>工厂类知道每一个产品，知道哪一个产品应该被实例化。</p><p><strong>缺点：</strong><br>不够灵活，产品很多时，需要修改工厂的判断逻辑。</p><h3 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h3><p>工厂不再负责所有产品的创建，而是交给子工厂，子工厂负责生成具体的产品对象。新增一个产品，不需要修改工厂的逻辑，但是需要新增一个子工厂。</p><p>开闭原则：对于扩展是开放的，对于修改是封闭的。就像原来是生产拖拉机的生产线，是将其修改为生产口罩还是新增一个生产口罩的生产线好？扩展优于修改。</p><p><strong>定义：</strong><br>定义一个用于创建对象的接口，让子类决定实例化哪个类。工厂方法使一个类的实例化延迟到其子类。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定义：&lt;/strong&gt;&lt;br&gt;确保一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端</title>
    <link href="https://asswei7.github.io/2021/01/29/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/"/>
    <id>https://asswei7.github.io/2021/01/29/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF/</id>
    <published>2021-01-29T01:19:01.000Z</published>
    <updated>2021-02-27T07:26:24.405Z</updated>
    
    <content type="html"><![CDATA[<p>侵入式和非侵入式：<br>假设大家都想要把用户代码塞到一个框架里。侵入式的做法就是要求用户代码“知道”框架的代码，表现为用户代码需要继承框架提供的类。非侵入式则不需要用户代码引入框架代码的信息，从类的编写者角度来看，察觉不到框架的存在。<br>例如：<br>使用struts的时候，我需要继承一些struts的类，这时struts侵入到了我的代码里。<br>使用spring，编写一些业务类的时候不需要继承spring特定的类，通过配置完成依赖注入后就可以使用，此时，spring就没有侵入到我业务类的代码里。</p><p>侵入式让用户代码产生对框架的依赖，这些代码不能在框架外使用，不利于代码的复用。但侵入式可以使用户跟框架更好的结合，更容易更充分的利用框架提供的功能。<br>非侵入式的代码则没有过多的依赖，可以很方便的迁移到其他地方。但是与用户代码互动的方式可能就比较复杂。</p><p>反射的作用：<br>1）在运行时判断任意一个对象所属的类。<br>2）在运行时构造任意一个类的对象。<br>3）在运行时判断任意一个类所具有的成员变量和方法。<br>4）在运行时调用任意一个对象的方法</p><p>反射就是把Java类中的各个部分，映射成一个个的Java对象，拿到这些对象后可以做一些事情。</p><p>既然说反射是反射Java类中的各个组成部分，所以说咱们得知道一个类中有哪儿些部分？</p><p>例如，一个类有：成员变量，方法，构造方法，等信息，利用反射技术咱们可以把这些组成部分映射成一个个对象。<br><a href="https://blog.csdn.net/Appleyk/article/details/77879073?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control">https://blog.csdn.net/Appleyk/article/details/77879073?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;侵入式和非侵入式：&lt;br&gt;假设大家都想要把用户代码塞到一个框架里。侵入式的做法就是要求用户代码“知道”框架的代码，表现为用户代码需要继承框架提供的类。非侵入式则不需要用户代码引入框架代码的信息，从类的编写者角度来看，察觉不到框架的存在。&lt;br&gt;例如：&lt;br&gt;使用struts
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>经济危机</title>
    <link href="https://asswei7.github.io/2021/01/27/%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA/%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA/"/>
    <id>https://asswei7.github.io/2021/01/27/%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA/%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA/</id>
    <published>2021-01-27T04:00:23.000Z</published>
    <updated>2021-01-29T01:19:21.222Z</updated>
    
    <content type="html"><![CDATA[<p>首先大量债务违约，房贷无法偿还，随后银行倒闭，金融市场恐慌，资本逃离，制造业银根断裂，失业紧跟而至。</p><p>经济危机：消费者的购买力过剩，根本原因是生产的社会化和生产资料私人占有之间的矛盾。</p><p>资本家没有需求去消费那么多商品，而真正有需求的普通大众日渐支付不起属于资本家的商品，市场的失调就此产生，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先大量债务违约，房贷无法偿还，随后银行倒闭，金融市场恐慌，资本逃离，制造业银根断裂，失业紧跟而至。&lt;/p&gt;
&lt;p&gt;经济危机：消费者的购买力过剩，根本原因是生产的社会化和生产资料私人占有之间的矛盾。&lt;/p&gt;
&lt;p&gt;资本家没有需求去消费那么多商品，而真正有需求的普通大众日渐支
      
    
    </summary>
    
    
      <category term="经济危机" scheme="https://asswei7.github.io/categories/%E7%BB%8F%E6%B5%8E%E5%8D%B1%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>安史之乱</title>
    <link href="https://asswei7.github.io/2021/01/27/%E5%AE%89%E5%8F%B2%E4%B9%8B%E4%B9%B1/%E5%AE%89%E5%8F%B2%E4%B9%8B%E4%B9%B1/"/>
    <id>https://asswei7.github.io/2021/01/27/%E5%AE%89%E5%8F%B2%E4%B9%8B%E4%B9%B1/%E5%AE%89%E5%8F%B2%E4%B9%8B%E4%B9%B1/</id>
    <published>2021-01-27T02:51:06.000Z</published>
    <updated>2021-01-27T03:37:09.307Z</updated>
    
    <content type="html"><![CDATA[<p>唐朝历史的转折点，也是中国历史的转折点。<br>公元618年李渊建立唐朝，安史之乱前总人口大约8000万，而且人均粮食占有量极高。<br>唐玄宗李隆基唐代第七位皇帝，初期勤政，提倡节俭，开元之治。<br>执政中期，不再专心政务，潜心钻研声乐歌舞，</p><p>节度使：是唐朝为了维持对外用兵或者镇守边关设置的官职，后期由于土地兼并，许多农民失去土地变成流民，只能变为募兵制，军队的开销就大幅增加，中央无法供给。就让边境的军队自给自足，节度使就掌管了军事、行政、民政、财政以及生产和税收。导致边境士兵“唯知其将之恩威而不知有天子”。怛罗斯战役，唐朝碰到了阿拉伯帝国，停止向西扩张。</p><p>唐朝宰相张九龄被李林甫代替，任人唯亲，导致中央的实力逐渐消弱。安禄山通过贿赂官员洗脱罪责，并表演胡旋舞得到了唐玄宗的注意，李林甫投其所好，推举安禄山为东北三镇节度使。李林甫死后，杨国忠为新的宰相，安禄山作为李林甫的党羽，与杨国忠交恶。</p><p>安禄山意识到中央实力削弱，并且自身受到威胁，下定决心发动兵变。安禄山以忧国之危奉密诏讨伐杨国忠为借口，在范阳（北京）起兵。皇帝令儿子李琬为元帅，高仙芝为副帅东征，保卫洛阳。<br>然后洛阳失守，坚守潼关，等待边关节度使调回大军。然而朝中文官忌惮武将立功，进谗言，皇帝以避战不出的罪名处斩高仙芝，哥舒翰继任。皇帝又逼迫他出城决战，安禄山设伏剿灭守军。玄宗逃出长安，向蜀地而去。</p><p>由于安禄山是湖人，中央逐渐排外，从包容变得保守，开始封闭自我，减少交流。</p><p>由于逃亡路上保卫皇帝的士兵没有食物，怨声载道，将怒气发向杨国忠，将其杀死，皇帝为了保护自己杀死杨玉环。太子李亨和李隆基关系不好，率兵向北逃亡。逃到宁夏，与各地节度使接洽，自称唐肃宗，说李隆基为太上皇，而玄宗在四川控制兵力不足两千，只得接受现实。肃宗在灵武封郭子仪为兵部尚书，李光弼为户部尚书，反击。 安禄山被儿子安庆绪灭掉，安庆绪想控制江南，睢阳是运河上的关键节点，若被攻陷，中央和江南的联系就会被掐断，但是张巡兵力仅有六千。坚守了一年，是转折点。</p><p>之后，肃宗收复长安，收复洛阳，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;唐朝历史的转折点，也是中国历史的转折点。&lt;br&gt;公元618年李渊建立唐朝，安史之乱前总人口大约8000万，而且人均粮食占有量极高。&lt;br&gt;唐玄宗李隆基唐代第七位皇帝，初期勤政，提倡节俭，开元之治。&lt;br&gt;执政中期，不再专心政务，潜心钻研声乐歌舞，&lt;/p&gt;
&lt;p&gt;节度使：是唐
      
    
    </summary>
    
    
      <category term="思维实验室" scheme="https://asswei7.github.io/categories/%E6%80%9D%E7%BB%B4%E5%AE%9E%E9%AA%8C%E5%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>战国四大名将</title>
    <link href="https://asswei7.github.io/2021/01/25/%E6%88%98%E5%9B%BD%E5%9B%9B%E5%A4%A7%E5%90%8D%E5%B0%86/%E6%88%98%E5%9B%BD%E5%9B%9B%E5%A4%A7%E5%90%8D%E5%B0%86/"/>
    <id>https://asswei7.github.io/2021/01/25/%E6%88%98%E5%9B%BD%E5%9B%9B%E5%A4%A7%E5%90%8D%E5%B0%86/%E6%88%98%E5%9B%BD%E5%9B%9B%E5%A4%A7%E5%90%8D%E5%B0%86/</id>
    <published>2021-01-25T06:53:04.000Z</published>
    <updated>2021-09-15T13:46:14.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="李牧-赵"><a href="#李牧-赵" class="headerlink" title="李牧(赵)"></a>李牧(赵)</h3><ol><li><p>坚壁清野<br>开始在北方抵御匈奴，采取坚壁清野(加固城墙的同时，把城外的植物水源统统破坏)的策略，但赵孝成王不满，去和匈奴硬打，战败，重新启用李牧。李牧大败匈奴。</p></li><li><p>防卫秦国<br>秦国派<strong>桓齮</strong>攻打赵国，一路高歌猛进，被李牧坚守不出打不过，被李牧打败。<br>嬴政启用<strong>王翦</strong>，收买了赵国重臣<strong>郭开</strong>，赵王杀害了李牧。王翦攻破赵国。</p></li></ol><h3 id="廉颇（赵）"><a href="#廉颇（赵）" class="headerlink" title="廉颇（赵）"></a>廉颇（赵）</h3><p>先打齐，又打魏，后打秦。<br>因为上党郡，和秦国僵持，一守就是三年。<br>廉颇攻打魏国，郭开进谗言，将廉颇革职，廉颇投奔魏国。后来赵王去请廉颇回来，使者被郭开拦下，最后在楚国郁郁而终。</p><h3 id="王翦（秦）"><a href="#王翦（秦）" class="headerlink" title="王翦（秦）"></a>王翦（秦）</h3><ol><li><p>早期比较低调，帮助宰相范雎干掉他的仇人。然后帮助嬴政解决他弟弟的叛乱。又帮助嬴政收拾吕不韦和嫪毐。</p></li><li><p>嬴政即位后<br>第一场灭赵国。然后荆轲刺秦，王翦灭燕国，燕王逃到辽东，最后被其儿子王贲灭掉。第三场王贲放水灭了魏国。第四场灭楚国，李信先去灭楚，被项燕打败。王翦带60万打楚国。第五场打齐国。</p></li></ol><h3 id="白起（秦）"><a href="#白起（秦）" class="headerlink" title="白起（秦）"></a>白起（秦）</h3><ol><li>战必全歼，战国死亡人数两百多万，一半死在他的手上。<br>包围魏韩联军主力，斩杀24万人，伊阙之战。<br>攻打楚国，放水淹死数十万人，鄢郢之战。<br>攻打赵魏进攻韩国的联军，斩杀13万，华阳之战。<br>攻打韩国，占领野王，切断韩国和上党郡的联系，引发长平之战。<br>韩赵两国联手贿赂范雎，把白起撤下，救了赵国。后来秦国一直打败仗，白起依旧称病不带兵，引起秦王暴怒。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;李牧-赵&quot;&gt;&lt;a href=&quot;#李牧-赵&quot; class=&quot;headerlink&quot; title=&quot;李牧(赵)&quot;&gt;&lt;/a&gt;李牧(赵)&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;坚壁清野&lt;br&gt;开始在北方抵御匈奴，采取坚壁清野(加固城墙的同时，把城外的植物水源统统破坏)的策略，但
      
    
    </summary>
    
    
      <category term="历史" scheme="https://asswei7.github.io/categories/%E5%8E%86%E5%8F%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>屠龙之术</title>
    <link href="https://asswei7.github.io/2021/01/14/%E5%B1%A0%E9%BE%99%E4%B9%8B%E6%9C%AF/%E5%B1%A0%E9%BE%99%E4%B9%8B%E6%9C%AF/"/>
    <id>https://asswei7.github.io/2021/01/14/%E5%B1%A0%E9%BE%99%E4%B9%8B%E6%9C%AF/%E5%B1%A0%E9%BE%99%E4%B9%8B%E6%9C%AF/</id>
    <published>2021-01-14T11:23:09.000Z</published>
    <updated>2021-01-14T11:34:13.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="故事背景与作者的反思"><a href="#故事背景与作者的反思" class="headerlink" title="故事背景与作者的反思"></a>故事背景与作者的反思</h3><p>屠龙术的故事源于庄子的《列御寇》，它只有简单的一句话：</p><blockquote><p>朱泙漫学屠龙于支离益，单千金之家，三年技成而无所用其巧。</p></blockquote><p>作者的反思：</p><blockquote><p>朱泙漫到底是谁？支离益又是谁？他们的名字为什么这么奇怪？<br><br>如果这世上本无龙，支离益为什么能教屠龙术？是因为这世上原本是有龙的，支离益曾是一名屠龙的勇士？亦或者支离益就是个骗子？<br><br>而朱泙漫又为什么肯耗尽千金家产，要学习屠龙术？他背后有怎样的故事？是不是他知道，这世界还有恶龙隐藏？<br><br>朱泙漫是怎么用三年时间学成屠龙术的？他是怎么练习的？又怎么在三年后认为自己已经学成了？<br>当朱泙漫学成了屠龙术，去做了什么？他游历了哪里，遇到了谁？庄子的世界里，真的没有龙吗？会不会像所有的童话故事一样，朱泙漫经历了一场恶战，杀掉了这世上的最后一条恶龙，从此归隐山林，不为人知？<br><br>这世界上真正的英雄不为人知，反被耻笑。直到突然有一天，又一只恶龙不知从哪里冒了出来。这似乎是很多英雄故事的套路。朱泙漫的故事是否也是如此？<br><br>后来呢？后来呢？</p></blockquote><h3 id="堂吉诃德"><a href="#堂吉诃德" class="headerlink" title="堂吉诃德"></a>堂吉诃德</h3><h3 id="没有龙就是最大的恶龙"><a href="#没有龙就是最大的恶龙" class="headerlink" title="没有龙就是最大的恶龙"></a>没有龙就是最大的恶龙</h3><p>想到了墨菲定律，即你觉得最困难的事情一定会发生。可以从博弈论的角度来看，对手会想尽办法让你难受，所以最困难的事情一定会发生。</p><p><br>想到了毛主席，居安思危，很有前瞻性地将义勇军进行曲作为国歌，认为我们永远处于危机之中，永远不能放松警惕。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;故事背景与作者的反思&quot;&gt;&lt;a href=&quot;#故事背景与作者的反思&quot; class=&quot;headerlink&quot; title=&quot;故事背景与作者的反思&quot;&gt;&lt;/a&gt;故事背景与作者的反思&lt;/h3&gt;&lt;p&gt;屠龙术的故事源于庄子的《列御寇》，它只有简单的一句话：&lt;/p&gt;
&lt;block
      
    
    </summary>
    
    
      <category term="技术类随笔" scheme="https://asswei7.github.io/categories/%E6%8A%80%E6%9C%AF%E7%B1%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>不来也不去</title>
    <link href="https://asswei7.github.io/2021/01/11/%E4%B8%8D%E6%9D%A5%E4%B9%9F%E4%B8%8D%E5%8E%BB/%E4%B8%8D%E6%9D%A5%E4%B9%9F%E4%B8%8D%E5%8E%BB/"/>
    <id>https://asswei7.github.io/2021/01/11/%E4%B8%8D%E6%9D%A5%E4%B9%9F%E4%B8%8D%E5%8E%BB/%E4%B8%8D%E6%9D%A5%E4%B9%9F%E4%B8%8D%E5%8E%BB/</id>
    <published>2021-01-11T13:17:21.000Z</published>
    <updated>2021-01-11T13:21:08.210Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>扬帆时 人潮没有你<br>我是我 和途人一起<br>停顿时 在你笑开的眼眉<br>望穿秋水之美</p></blockquote><p>人生的旅途中没有你了，一个人去很热闹的地方，突然看到一个美。</p><blockquote><p>回程时 浪淘尽了你<br>任背影 长睡着不起<br>留下我 在粪土当中<br>翻检背囊 直到拾回自己<br>掌心因此多出一根刺<br>没有刺痛便懒知<br>就当共你 有旧情没有往事</p></blockquote><p>如烟 因给你递过火<br>如火 却也没熔掉我<br>回望最初 当丧失是得着可不可<br>可痛若骊歌 乐如儿歌<br>像你没来过 没去过<br>谁同行 仍同样结尾<br>血液里 才遗传悲喜<br>谁亦难 避过这一身客尘<br>但刚巧出於你<br>垂头前 没缘份丧气<br>睡到醒 才站立得起<br>盲目过 便看到天机<br>反覆往来 又再做回自己<br>即使一生多出一根刺 没有刺痛别要知<br>就当共你 有剧情没有故事<br>如烟 因给你递过火<br>如火 却也没熔掉我<br>回望最初 当丧失是得着可不可<br>可痛若骊歌 乐如儿歌<br>像你没来过 没去过<br>如花 超生了没有果<br>如果 过路能重踏过<br>就当最初 是碎步湖上可不可<br>不种下甚麽 摘来甚麽<br>像我没来过 没去过</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;扬帆时 人潮没有你&lt;br&gt;我是我 和途人一起&lt;br&gt;停顿时 在你笑开的眼眉&lt;br&gt;望穿秋水之美&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人生的旅途中没有你了，一个人去很热闹的地方，突然看到一个美。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;回程时 
      
    
    </summary>
    
    
      <category term="音乐" scheme="https://asswei7.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
  </entry>
  
  <entry>
    <title>最佳损友</title>
    <link href="https://asswei7.github.io/2021/01/11/%E6%9C%80%E4%BD%B3%E6%8D%9F%E5%8F%8B/%E6%9C%80%E4%BD%B3%E6%8D%9F%E5%8F%8B/"/>
    <id>https://asswei7.github.io/2021/01/11/%E6%9C%80%E4%BD%B3%E6%8D%9F%E5%8F%8B/%E6%9C%80%E4%BD%B3%E6%8D%9F%E5%8F%8B/</id>
    <published>2021-01-11T12:33:58.000Z</published>
    <updated>2021-01-11T13:02:54.343Z</updated>
    
    <content type="html"><![CDATA[<p>杨千嬅和黄伟文。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;杨千嬅和黄伟文。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="音乐" scheme="https://asswei7.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
  </entry>
  
  <entry>
    <title>无条件</title>
    <link href="https://asswei7.github.io/2021/01/11/%E6%97%A0%E6%9D%A1%E4%BB%B6/%E6%97%A0%E6%9D%A1%E4%BB%B6/"/>
    <id>https://asswei7.github.io/2021/01/11/%E6%97%A0%E6%9D%A1%E4%BB%B6/%E6%97%A0%E6%9D%A1%E4%BB%B6/</id>
    <published>2021-01-11T12:30:12.000Z</published>
    <updated>2021-01-11T13:15:48.084Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你 何以始终不说话 尽管讲出不快吧<br>事与冀盼有落差 请不必惊怕<br>我 仍然会冷静聆听<br>仍然紧守于身边 与你进退也共鸣</p><p>时日会蔓延再蔓延 某些不可改变的改变<br>与一些不要发现的发现 就这么放大了缺点<br>来让我问谁可决定 那些东西叫作完美至善<br>我只懂得 爱你在每天</p></blockquote><p>日久见人心，放大了你身上的缺点。<br>但是没有一个标准评价什么人是完美的，我就认为你是最好的。</p><blockquote><p>当潮流爱新鲜 当旁人爱标签<br>幸得伴着你我 是窝心的自然<br>当闲言再尖酸 给他妒忌多点<br>因世上的至爱 是不计较条件 谁又可清楚看见</p></blockquote><p>我爱你不是跟随潮流，而是漫长的一件事。</p><blockquote><p>美 难免总有些缺憾 若果不甘心去问<br>问到最尾叫内心 也长出裂痕<br>笑 何妨与你又重温<br>仍然我说我庆幸 你永远胜过别人</p><p>期待美没完爱没完 放开不必打算的打算<br>作一些可以约定的约定 就抱紧以后每一天<br>其实你定然都发现 我有很多未达完美事情<br>我只懂得 再努力每天</p><p>当潮流爱新鲜 当旁人爱标签<br>幸得伴着你我 是窝心的自然<br>当闲言再尖酸 给他妒忌多点<br>因世上的至爱 是不计较条件 谁又可清楚看见</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;你 何以始终不说话 尽管讲出不快吧&lt;br&gt;事与冀盼有落差 请不必惊怕&lt;br&gt;我 仍然会冷静聆听&lt;br&gt;仍然紧守于身边 与你进退也共鸣&lt;/p&gt;
&lt;p&gt;时日会蔓延再蔓延 某些不可改变的改变&lt;br&gt;与一些不要发现的发现 就这么放大了缺点&lt;br&gt;来让我问谁
      
    
    </summary>
    
    
      <category term="音乐" scheme="https://asswei7.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
  </entry>
  
  <entry>
    <title>单车</title>
    <link href="https://asswei7.github.io/2021/01/11/%E5%8D%95%E8%BD%A6/%E5%8D%95%E8%BD%A6/"/>
    <id>https://asswei7.github.io/2021/01/11/%E5%8D%95%E8%BD%A6/%E5%8D%95%E8%BD%A6/</id>
    <published>2021-01-11T12:30:12.000Z</published>
    <updated>2021-07-23T01:52:04.538Z</updated>
    
    <content type="html"><![CDATA[<p>不要不要假设我知道<br>一切一切也都是为我而做<br>为何这么伟大<br>如此感觉不到</p><blockquote><p>不说一句的爱有多好<br>只有一次记得实在接触到<br>骑着单车的我俩<br>怀紧贴背的拥抱</p></blockquote><p>不会表达爱意的父亲形象，</p><p>难离难舍想抱紧些<br>茫茫人生好像荒野<br>如孩儿能伏于爸爸的肩膊<br>谁要下车<br>难离难舍总有一些<br>常情如此不可推卸<br>任世间再冷酷<br>想起这单车还有幸福可借</p><blockquote><p>经已给我怎会看不到<br>虽说演你角色实在有难度<br>从来虚位以待<br>何不给个拥抱<br>想我怎去相信这一套<br>多疼惜我却不便让我知道<br>怀念单车给你我<br>唯一有过的拥抱</p><p>难离难舍想抱紧些<br>茫茫人生好像荒野<br>如孩儿能伏于爸爸的肩膊<br>哪怕遥遥长路多斜<br>你爱我爱多些<br>让我他朝走得坚壮些<br>你介意来爱护<br>又靠谁施舍</p></blockquote><p>难离难舍想抱紧些<br>茫茫人生好像荒野<br>如孩儿能伏于爸爸的肩膊<br>谁要下车<br>难离难舍总有一些<br>常情如此不可推卸<br>任世间怨我坏可知我只得你<br>承受我的狂或野</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不要不要假设我知道&lt;br&gt;一切一切也都是为我而做&lt;br&gt;为何这么伟大&lt;br&gt;如此感觉不到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不说一句的爱有多好&lt;br&gt;只有一次记得实在接触到&lt;br&gt;骑着单车的我俩&lt;br&gt;怀紧贴背的拥抱&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不会表达
      
    
    </summary>
    
    
      <category term="音乐" scheme="https://asswei7.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
  </entry>
  
  <entry>
    <title>苦瓜</title>
    <link href="https://asswei7.github.io/2021/01/11/%E8%8B%A6%E7%93%9C/%E8%8B%A6%E7%93%9C/"/>
    <id>https://asswei7.github.io/2021/01/11/%E8%8B%A6%E7%93%9C/%E8%8B%A6%E7%93%9C/</id>
    <published>2021-01-11T12:30:05.000Z</published>
    <updated>2021-01-11T12:30:05.981Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
